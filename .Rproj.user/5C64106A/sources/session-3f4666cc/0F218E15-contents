
```{r}

# Load required packages
library(tidyverse)
library(here)

# Create Singles Table
singles_tax_rates <- tibble::tribble(
  ~Filing.Type,      ~tax.type,    ~min,     ~max,  ~rate,
  "Single", "capitalgains",      0L,   41675L,      0,
  "Single", "capitalgains",  41676L,  459750L,   0.15,
  "Single", "capitalgains", 459751L, 9999999L,    0.2,
  "Single",      "federal",      0L,   11000L,    0.1,
  "Single",      "federal",  11000L,   44725L,   0.12,
  "Single",      "federal",  44725L,   95375L,   0.22,
  "Single",      "federal",  95375L,  182100L,   0.24,
  "Single",      "federal", 182100L,  231250L,   0.32,
  "Single",      "federal", 231250L,  578125L,   0.35,
  "Single",      "federal", 578125L, 9999999L,   0.37,
  "Single",        "state",      0L,    3750L, 0.0475,
  "Single",        "state",   3751L,    9450L, 0.0675,
  "Single",        "state",   9451L,  125000L, 0.0875,
  "Single",        "state", 125001L, 9999999L,  0.099,
  "Single",        "newstate",      0L,    3750L, 0.0475+.0075,
  "Single",        "newstate",   3751L,    9450L, 0.0675+.0075,
  "Single",        "newstate",   9451L,  125000L, 0.0875+.0075,
  "Single",        "newstate", 125001L, 9999999L,  0.099+.0075
)

# Take the incomes of $1 to $1 million
tax_rates_for_singles <- tibble(income = 1:1000000) %>%
  cross_join(
    singles_tax_rates
  ) %>%
  mutate(
    # Make the tax dollars per bracket
    tax_dollars = rate*case_when(
      income < min ~ 0,
      income > max ~ max-min,
      income >= min & income <= max ~ income-min
    ),
    # Create new columns for each type of tax
    wages = if_else(tax.type %in% c('federal', 'state'), tax_dollars, 0),
    capital = if_else(tax.type %in% c('capitalgains', 'state'), tax_dollars, 0),
    newcapital = if_else(tax.type %in% c('capitalgains', 'newstate'), tax_dollars, 0)
  ) %>%
  # Get the total amount of taxes per type of income per an income amount
  group_by(income) %>%
  reframe(
    wages = sum(wages),
    capital = sum(capital),
    newcapital = sum(newcapital)
  ) %>%
  # Turn the columns to rows to make it easier to graph
  pivot_longer(cols = c(wages, capital, newcapital), names_to = "tax_type", values_to = "tax_dollars") %>%
  mutate(
    true_tax_rates = tax_dollars/income,
    tax_type = case_when(
      tax_type == 'wages' ~ 'Wages',
      tax_type == 'capital' ~ 'Capital Gains',
      tax_type == 'newcapital' ~ 'New Capital Gains')
  )

# Create graph of the rate of taxes per income
tax_graph <- tax_rates_for_singles %>%
  # Graph only the first x rows
  filter(income < 200000) %>%
  ggplot(aes(x=income, y=true_tax_rates, color=tax_type)) +
  geom_line() +
  scale_y_continuous(
    labels = scales::percent_format(scale = 100)
  ) +
  scale_x_continuous(labels=scales::dollar_format()) +
  theme(
    panel.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    plot.title = element_text(size=14),
    axis.title = element_text(size=12),
    legend.key=element_blank(),
    legend.title=element_blank(),
    axis.ticks = element_blank(),
    axis.line.y = element_line(),
    axis.line.x = element_line(),
    legend.box="vertical",
    legend.position="right"
  ) +
  theme(
    panel.grid.major.y = element_line(linetype=2),
    panel.grid = element_line(color = "#CDD7DC",
                              size = 0.75,
                              linetype = 2)
  ) +
  ylab('Federal and State Tax Rate') +
  xlab('Income') +
  ggtitle("Federal and State Income in Oregon")

print(tax_graph)

# Save the graphic
ggsave(
  filename=here("Output/Multnomah County Taxes.png"),
  plot = tax_graph,
  device = png,
  scale = .85,
  width = 10,
  height = 5,
  units = "in",
  dpi = 300
)

```

